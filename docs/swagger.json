{
    "swagger": "2.0",
    "info": {
        "title": "Swagger Gophermart Service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/user/balance": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Get user's balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserBalanceInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    }
                }
            }
        },
        "/api/user/balance/withdraw": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Withdraw user's balance",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.Withdraw"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/storage.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "402": {
                        "description": "not enough balance",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessLogin"
                        }
                    },
                    "400": {
                        "description": "Incorrect request data",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "401": {
                        "description": "Login is not found or password is wrong",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    }
                }
            }
        },
        "/api/user/orders": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get user's orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/handlers.OrderReponse"
                        }
                    },
                    "204": {
                        "description": "No orders",
                        "schema": {
                            "$ref": "#/definitions/storage.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Add an order",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order is already added",
                        "schema": {
                            "$ref": "#/definitions/storage.Success"
                        }
                    },
                    "202": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/storage.Success"
                        }
                    },
                    "400": {
                        "description": "Error or incorrect data",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "409": {
                        "description": "Order number is already added by other user",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "422": {
                        "description": "incorrect order number",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Regiser user",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/storage.Success"
                        }
                    },
                    "409": {
                        "description": "Login is already used",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    }
                }
            }
        },
        "/api/user/withdrawals": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Get user's withdrawls",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.WithdrawalsReponse"
                            }
                        }
                    },
                    "204": {
                        "description": "No orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.WithdrawalsReponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/storage.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.OrderReponse": {
            "type": "object",
            "required": [
                "accrual",
                "number",
                "status",
                "uploadedAt"
            ],
            "properties": {
                "accrual": {
                    "type": "integer"
                },
                "number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uploadedAt": {
                    "type": "string",
                    "example": "2024-06-12T08:00:04+03:00"
                }
            }
        },
        "handlers.SuccessLogin": {
            "type": "object",
            "required": [
                "success",
                "token"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "handlers.UserBalanceInfo": {
            "type": "object",
            "required": [
                "current",
                "withdrawn"
            ],
            "properties": {
                "current": {
                    "type": "integer"
                },
                "withdrawn": {
                    "type": "integer"
                }
            }
        },
        "handlers.Withdraw": {
            "type": "object",
            "required": [
                "order",
                "sum"
            ],
            "properties": {
                "order": {
                    "type": "string"
                },
                "sum": {
                    "type": "integer"
                }
            }
        },
        "handlers.WithdrawalsReponse": {
            "type": "object",
            "required": [
                "order",
                "processed_at",
                "sum"
            ],
            "properties": {
                "order": {
                    "type": "string"
                },
                "processed_at": {
                    "type": "string",
                    "example": "2024-06-12T08:00:04+03:00"
                },
                "sum": {
                    "type": "integer"
                }
            }
        },
        "storage.Error": {
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "storage.RegisterUser": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "storage.Success": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}